name: edPlatform

services:
  server1:
    build:
      context: .
      dockerfile: cmd/srv/Dockerfile
    image: ed-platform/srv
    ports:
      - 3000:3000
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - elasticsearch
    networks:
      - app-net

  db:
    image: postgres:17-alpine
    ports:
      - 5432:5432 # For database debug
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
      - db-data:/var/lib/postgresql/data # Persistent DB storage
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 80s
    networks:
      - app-net

#  redis:
#    image: redis:alpine3.22
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis-data:/data
##      - redis-data-conf:/usr/local/etc/redis/redis.conf
#    environment:
#      - REDIS_PASSWORD=my-password
#      - REDIS_PORT=6379
#      - REDIS_DATABASES=16

  minio:
    image: minio/minio
    restart: always
    command: server /data --console-address ":9090"
    ports:
      - 9090:9090 # For minio console
      - 9000:9000
    volumes:
      - minio-data:/data
    env_file:
      - .env
    networks:
      - app-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    env_file:
      - .env
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


volumes:
  db-data:
#  redis-data:
#  redis-data-conf:
  minio-data:
  elastic_data:

networks:
  app-net:
