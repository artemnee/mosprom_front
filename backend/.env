# Database Configuration
POSTGRES_DB=${POSTGRES_DB:-data}
POSTGRES_USER=${POSTGRES_USER:-admin}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
POSTGRES_HOST=${POSTGRES_HOST:-db}
DATABASE_URL=${DATABASE_URL:-postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:5432/$POSTGRES_DB?sslmode=disable&application_name=edPlatform}

# AWS and MinIO Configuration
AWS_REGION=${AWS_REGION:-""} # AWS region, left empty by default
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-access-key} # Default AWS access key ID (placeholder value); also used for MinIO root user
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-secret-key} # Default AWS secret access key (placeholder value); also used for MinIO root password
AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-minio:9000} # Endpoint URL for S3-compatible storage; defaults to 'minio:9000' (Docker container named 'minio')
AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-uploads} # Name of the S3 bucket; defaults to 'uploads'
MINIO_ROOT_USER=${MINIO_ROOT_USER:-${AWS_ACCESS_KEY_ID}} # Root username for MinIO, linked with AWS access key
MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-${AWS_SECRET_ACCESS_KEY}} # Root password for MinIO, linked with AWS secret key

# Application Configuration
APP_SERVER_URL=${APP_SERVER_URL:-server1}
APP_SERVER_PORT=${APP_SERVER_PORT:-3000}
SECRET_KEY=${SECRET_KEY:-secretkey}

# Elasticsearch Configuration
ELASTICSEARCH_URL=${ELASTICSEARCH_URL:-http://elasticsearch:9200}
ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-password}